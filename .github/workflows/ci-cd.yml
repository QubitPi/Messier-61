# Copyright 2023 Paion Data. All rights reserved.
---
name: Messier-61 CI/CD

"on":
  workflow_call:
  pull_request:
  push:
    branches:
      - master

env:
  USER: QubitPi
  EMAIL: jack20220723@gmail.com
  HASHICORP_PRODUCT_VERSION: "latest"

jobs:
  yaml-lint:
    name: YAML Lint Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actionshub/yamllint@main
  markdown-lint:
    name: Markdown Lint Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actionshub/markdownlint@main
  markdown-link-check:
    name: Markdown Link Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: gaurav-nelson/github-action-markdown-link-check@v1
        with:
          use-verbose-mode: "yes"

  test:
    name: Check Style and Run All Tests
    needs: [yaml-lint, markdown-lint, markdown-link-check]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node_version: [16]
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set node version to ${{ matrix.node_version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node_version }}
      - name: Install dependencies
        run: yarn
      - name: Code style check
        run: npx prettier --check .
      # - name: Static code analysis
      #   run: npx eslint .
      - name: Run tests
        run: yarn test
      - name: Build
        run: yarn build

  release:
    name: Publish NPM Packages
    if: github.ref == 'refs/heads/master'
    needs: test
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set node version to 16
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: npm
          registry-url: "https://registry.npmjs.org"
      - name: Tag for release
        run: |
          git config --global user.name '$USER'
          git config --global user.email '$EMAIL'
          .github/tag-for-release.bash
      - name: Set release version
        run: |
          VERSION=$(git describe)
          npm version $VERSION
      - name: Publish to NPM Packages
        run: |
          npm config set '//registry.npmjs.org/:_authToken' "${NPM_TOKEN}"
          npm publish --access public
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

  documentation-ci-cd:
    name: Test and Deploy Documentation to GitHub Pages
    needs: test
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: docs
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: Install Messier-61 dependencies so that TypeDoc process source files properly
        run: |
          cd ../
          yarn

          cd packages/messier-61-graph
          yarn

          cd ../messier-61-graphql-server
          yarn
      - name: Install doc dependencies
        run: yarn
      - name: Build documentation
        run: yarn build-without-typedoc
      - name: Deploy to GitHub Pages
        if: github.ref == 'refs/heads/master'
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./docs/build
          user_name: ${{ env.USER }}
          user_email: ${{ env.EMAIL }}

  hashicorp:
    name: Publish Messier-61 AMI image and Deploy It to EC2 through HashiCorp
    needs: test
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: hashicorp
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        if: github.ref == 'refs/heads/master'
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_DEPLOY_REGION }}

      - name: Setup HashiCorp Packer
        uses: hashicorp/setup-packer@main
        with:
          version: ${{ env.HASHICORP_PRODUCT_VERSION }}
      - name: Initialize Packer configuration
        run: packer init .
        working-directory: hashicorp/images
      - name: Validate Packer template
        run: packer validate -var "aws_image_region=${{ secrets.AWS_IMAGE_REGION }}" .
        working-directory: hashicorp/images
      - name: Build and release AMI image
        if: github.ref == 'refs/heads/master'
        run: packer build -var "aws_image_region=${{ secrets.AWS_IMAGE_REGION }}" .
        working-directory: hashicorp/images

      - name: Setup HashiCorp Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ env.HASHICORP_PRODUCT_VERSION }}
      - name: Initialize Terraform configuration
        run: terraform init
        working-directory: hashicorp/instances
      - name: Validate Terraform template
        run: terraform validate
        working-directory: hashicorp/instances
      - name: Create EC2 instance
        if: github.ref == 'refs/heads/master'
        run: terraform apply -auto-approve -var="aws_deploy_region=${{ secrets.AWS_DEPLOY_REGION }}"
        working-directory: hashicorp/instances
