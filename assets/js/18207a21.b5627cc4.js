"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[376],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>h});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),p=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(l.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),u=p(n),m=o,h=u["".concat(l,".").concat(m)]||u[m]||d[m]||a;return n?r.createElement(h,i(i({ref:t},c),{},{components:n})):r.createElement(h,i({ref:t},c))}));function h(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[u]="string"==typeof e?e:o,i[1]=s;for(var p=2;p<a;p++)i[p]=n[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},9307:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>d,frontMatter:()=>a,metadata:()=>s,toc:()=>p});var r=n(7462),o=(n(7294),n(3905));const a={sidebar_position:2,title:"CI/CD"},i=void 0,s={unversionedId:"development/ci-cd",id:"development/ci-cd",title:"CI/CD",description:"Testing",source:"@site/docs/development/ci-cd.md",sourceDirName:"development",slug:"/development/ci-cd",permalink:"/Messier-61/docs/development/ci-cd",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/development/ci-cd.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,title:"CI/CD"},sidebar:"tutorialSidebar",previous:{title:"Getting Started",permalink:"/Messier-61/docs/development/getting-started"}},l={},p=[{value:"Testing",id:"testing",level:2},{value:"Release Process",id:"release-process",level:2},{value:"Messier-61",id:"messier-61",level:3},{value:"Messier-61 Documentation",id:"messier-61-documentation",level:3},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"Error: Docker pull failed with exit code 1",id:"error-docker-pull-failed-with-exit-code-1",level:3},{value:"Code Style Check Error",id:"code-style-check-error",level:3}],c={toc:p},u="wrapper";function d(e){let{components:t,...a}=e;return(0,o.kt)(u,(0,r.Z)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"testing"},"Testing"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Code style check"),(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"YAML lint"),(0,o.kt)("li",{parentName:"ul"},"Markdown lint"),(0,o.kt)("li",{parentName:"ul"},"Markdown link check"))),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Build and test Messier-61"),(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"The build process checks code style again using ",(0,o.kt)("a",{parentName:"p",href:"https://prettier.io/"},"Prettier"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"The process also runs static code anslysis using ",(0,o.kt)("a",{parentName:"p",href:"https://eslint.org/"},"ESLint")),(0,o.kt)("admonition",{parentName:"li",type:"caution"},(0,o.kt)("p",{parentName:"admonition"},"ESLint currently does not run on documentation source codes, i.e. ",(0,o.kt)("inlineCode",{parentName:"p"},"/docs")))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"The tests are run using ",(0,o.kt)("inlineCode",{parentName:"p"},"npm test")," in Jest framework")))),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Test Build Messier-61 Documentation"))),(0,o.kt)("h2",{id:"release-process"},"Release Process"),(0,o.kt)("h3",{id:"messier-61"},"Messier-61"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("a",{parentName:"li",href:"#testing"},"Comprehensively test")),(0,o.kt)("li",{parentName:"ol"},"Fetch the tags from the adjusted remote"),(0,o.kt)("li",{parentName:"ol"},"Get the last tag on the working branch"),(0,o.kt)("li",{parentName:"ol"},"Build (",(0,o.kt)("inlineCode",{parentName:"li"},".github/upversion.py"),") and push the new tag as the new release version."),(0,o.kt)("li",{parentName:"ol"},"Bump Messier-61 version the new release version"),(0,o.kt)("li",{parentName:"ol"},"Push Messier-61 to ",(0,o.kt)("a",{parentName:"li",href:"https://www.npmjs.com/package/@paiondata/messier-61"},"NPM registry")),(0,o.kt)("li",{parentName:"ol"},"Publish ",(0,o.kt)("a",{parentName:"li",href:"#messier-61-documentation"},"documentation")," to GitHub Pages")),(0,o.kt)("h3",{id:"messier-61-documentation"},"Messier-61 Documentation"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://docusaurus.io/docs/deployment#deploying-to-github-pages"},"GitHub Actions")," allow us to automate, customize, and execute our software development workflows right\nin our repository. This also applies to our documentations."),(0,o.kt)("p",null,"Messier-61 documentation source resides in the master branch under ",(0,o.kt)("inlineCode",{parentName:"p"},"docs/")," directory, publishing source is configured\nfor the ",(0,o.kt)("inlineCode",{parentName:"p"},"gh-pages")," branch."),(0,o.kt)("p",null,"The CI/CD for documentation achieves 2 goals:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"When a new pull request is made to ",(0,o.kt)("inlineCode",{parentName:"li"},"master"),", there's an action that ensures the site builds successfully, without\nactually deploying. This job is called ",(0,o.kt)("inlineCode",{parentName:"li"},"test-doc-build"),"."),(0,o.kt)("li",{parentName:"ol"},"When a pull request is merged to the ",(0,o.kt)("inlineCode",{parentName:"li"},"master")," branch, it will be built and deployed to the ",(0,o.kt)("inlineCode",{parentName:"li"},"gh-pages")," branch. After\nthat, the new build output will be served on the GitHub Pages site. This job is ",(0,o.kt)("inlineCode",{parentName:"li"},"deploy-documentation")," called deploy.")),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},"The documentation build is a 2-step process:"),(0,o.kt)("ol",{parentName:"admonition"},(0,o.kt)("li",{parentName:"ol"},"A regular ","[Docusaurus ",(0,o.kt)("inlineCode",{parentName:"li"},"build"),"][Docusaurus Build]"," command that generates the static HTML of\n","[documentation site][documentation]"),(0,o.kt)("li",{parentName:"ol"},"An execution of TypeDoc Node API that generates the ","[Messier-61 API documentation][documentation on API]")),(0,o.kt)("p",{parentName:"admonition"},"The output of both of the 2 steps above will be picked up and pushed to GitHub Pages for serving.")),(0,o.kt)("h2",{id:"troubleshooting"},"Troubleshooting"),(0,o.kt)("h3",{id:"error-docker-pull-failed-with-exit-code-1"},"Error: Docker pull failed with exit code 1"),(0,o.kt)("p",null,"We found that one of our CI/CD jobs broken itself without any code change on Messier-61 side:"),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"Error loading github-upstream-issue.png",src:n(2798).Z,width:"994",height:"690"})),(0,o.kt)("p",null,"In most cases this is not a Messier-61 issue, but an ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/features/packages"},"upstream service")," downtime issue. The best of\nwhat we can do is focusing on other priorities and come back later after the upstream fixes the issue."),(0,o.kt)("h3",{id:"code-style-check-error"},"Code Style Check Error"),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"Error loading code-style-check-error.png",src:n(352).Z,width:"2698",height:"1112"})),(0,o.kt)("p",null,"Messier-61 uses ",(0,o.kt)("a",{parentName:"p",href:"https://prettier.io/"},"Prettier")," as code style checker. The error above indicates that Prettier found some styling\nissues. To fix those, simply run the following command at the root of Messier-61 project and re-push the code:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"npx prettier --write .\n")),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},"Alternatively, we can have Prettier watch for changes from the command line by using our integrated\n","[onchange][onchange]",":"),(0,o.kt)("pre",{parentName:"admonition"},(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"npm run prettier-watch\n"))))}d.isMDXComponent=!0},352:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/code-style-check-error-385cc128322fbd56e4df8c3c0447e116.png"},2798:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/github-upstream-issue-d20264f2df588bc7e995516b0b05cf0e.png"}}]);